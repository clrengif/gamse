.. _pipeline_foces:

FOCES Pipeline
===============

The FOCES pipeline is used to reduced the raw FITS files generated by FOCES.
The naming of the FITS files follows the :ref:`FOCES naming convention<foces_fitsname>` and
the keywords in the primary header follows the :ref:`FOCES FITS standard<foces_fitsfile>`\ .
The procedure of the reduction of FOCES data includes:

#. Creation of log & configuration files;
#. Overscan correction;
#. Bias subraction;
#. Dark current correction;
#. Flat fielding correction;
#. Order location;
#. Background subtraction;
#. 1-D spectra extraction;
#. Wavelength calibration.


.. currentmodule:: edrs.pipeline.foces

Preparing Log & Configuration Files
------------------------------------
The list of different type of exposures (flat, bias, science...) is given in the configuration file (`*****.cfg`).
Users can also change the parameters used in EDRS2
(e.g. degree of polynomials in the background correction, scanning intervals in order location...).
Below is an example::

    [general]
    reduction_id = FOCES_20150304_A
    data_path    = rawdata
    mid_path     = midproc
    report_path  = report
    result_path  = result
    saturation   = 63000

    bias    = 2-6
    thar    = 1, 47, 48
    flat_1  = 43
    flat_2  = 44
    flat_3  = 45
    flat_4  = 46
    science = 7-42

    [overscan]
    variation_fig = overscan_variation.png

    [bias]
    cosmic_clip     = 10.
    bias_file       = bias.fits
    smooth_sigma    = 3
    smooth_mode     = nearest
    smooth_file     = bias_smooth.fits
    res_file        = bias_res.fits
    variation_fig   = bias_change.png
    smooth_fig      = bias_smooth.png
    smooth_hist_fig = bias_smooth_hist.png

    [flat]
    flat_file   = flat.fits
    mosaic_file = flat.reg

    [trace]
    trace_file = trace.fits

The configuration file follows `RFC822 <https://tools.ietf.org/html/rfc822.html>`_ format,
and composed of several "sessions" marked with `[XXX]`. It is read by Python built-in `ConfigParser <https://docs.python.org/2/library/configparser.html>`_ module and passed to EDRS2.


.. autosummary::

   log.make_log

Overscan Correction
---------------------

.. autosummary::

   overscan.correct_overscan



Bias Subtraction
----------------

.. autosummary::

   bias.correct_bias
   bias.plot_bias_variation
   bias.plot_bias_smooth

Flat Fielding
--------------

Flats with different exposure times are mosaiced together to generate the final flat image.
In EDRS2, an interactive interface will be displayed


.. figure:: ../images/flat_mosaic.png
   :align: center
    


The cross sections of each kind of flat are plotted with different colors.
Then user can simply click the figure to define a mosaic boundary line,
and select which part of the flat is used in the final flat (the lowest one with black color).
Because the order in the 2D image is not a straight line, the boundary line on the 2D image lies between two orders,
and is carefully calculated to fit the curvatures of the orders, to avoid any crossing, as shown below:


.. figure:: ../images/flat_mosaic2.png
   :align: center
    
The mosaic module can be used not only 3 kinds of flat (red/green/blue), but any numbers of kinds.
This step only relies on matplotlib, scipy, and DS9.


Order Location
--------------------

.. autosummary::

   trace.filter_negative
   trace.load_order_locations
   trace.trace_order



Background Subtraction
----------------------

.. autosummary::

   background
   
Logging
--------
During running, a log file is generated to tell the users what did the program do,
and where is the error occurred if the program quit abnormally.
The log file `edrs.log` is generated in the current working directory by the
Python `logging <https://docs.python.org/2/library/logging.html>`_ module,
and has a clear and machine-readable format, and list the time, module name,
line number of the running place, and the name of function.
As below::


    * 2016-02-29T11:15:39.511 [INFO] __main__ - 67 - record_system_info():
      Start reduction.
      Node:              wangliang-mbp
      Processor:         1 x Intel(R) Core(TM) i7-2620M CPU @ 2.70GHz (2 cores)
      System:            Linux 3.19.0-51-generic x86_64
      Distribution:      Ubuntu 14.04 trusty
      Memory:            7.7G (total); 4.2G (used); 3.5G (free)
      Username:          wangliang
      Python version:    2.7.6
      Working directory: /home/wangliang/work/foces/reduction/2015-03-04
    --------------------------------------------------------------------------------
    * 2016-02-29T11:15:39.511 [INFO] __main__ - 77 - main():
      arg1 = foces, start reducing FOCES data
    --------------------------------------------------------------------------------
    * 2016-02-29T11:15:39.511 [INFO] edrs.config - 36 - read_config():
      Found config file: "FOCES_20150304_A.cfg"
    --------------------------------------------------------------------------------
    * 2016-02-29T11:15:39.512 [ERROR] edrs.pipeline.foces.reduce_data - 18 - reduce_data():
      data_path: "rawdata" does not exist
    --------------------------------------------------------------------------------

